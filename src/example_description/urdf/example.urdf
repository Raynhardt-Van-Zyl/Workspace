<?xml version="1.0" ?>
<robot name="example">

    <link name="chassis">
        <inertial>
            <mass value="6"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="0.08500000" ixy="0" ixz="0" iyy="0.02500000" iyz="0" izz="0.10000000"/>
        </inertial>
        <collision name="chassis_collision">
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://example_description/meshes/rover.dae" scale="1 1 1"/>
            </geometry>
        </collision>
        <visual name="chassis_visual">
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://example_description/meshes/rover.dae" scale="1 1 1"/>
            </geometry>
        </visual>
    </link>

    <link name="dummy"/>
    <joint name="dummy_link" type="fixed">
        <parent link="chassis"/>
        <child link="dummy"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>
    <!--Left Front Wheel-->

    <link name="left_front_wheel">
        <inertial>
            <mass value="0.5"/>
            <origin xyz="0 0 0" rpy="0 0 -1.570796"/>
            <inertia ixx="0.00357413" ixy="0" ixz="0" iyy="0.00508627" iyz="0" izz="0.00838547"/>
        </inertial>

        <collision name="left_front_wheel_collision">
            <origin xyz="0 0 0" rpy="0 0 -1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/wheel.dae" scale="1 1 1"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>0.01</mu>
                        <mu2>0.01</mu2>
                    </ode>
                </friction>
            </surface>
        </collision>

        <visual name="left_front_wheel_visual">
            <origin xyz="0 0 0" rpy="0 0 -1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/wheel.dae" scale="1 1 1"/>
            </geometry>
        </visual>
    </link>

    <joint name="left_front_wheel_joint" type="revolute">
        <parent link="chassis"/>
        <child link="left_front_wheel"/>
        <origin xyz="1.3 1.9 0.35" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="-9999999999999999" upper="9999999999999999" effort="2000.0" velocity="10.0"/>
    </joint>

    <transmission name="t_left_front_wheel">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="left_front_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="m_left_front_wheel">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>

    <!--Right Front Wheel-->
    <link name="right_front_wheel">
        <inertial>
            <mass value="0.5"/>
            <origin xyz="0 0 0" rpy="0 0 1.570796"/>
            <inertia ixx="0.00357413" ixy="0" ixz="0" iyy="0.00508627" iyz="0" izz="0.00838547"/>
        </inertial>

        <collision name="right_front_wheel_collision">
            <origin xyz="0 0 0" rpy="0 0 1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/wheel.dae" scale="1 1 1"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>0.01</mu>
                        <mu2>0.01</mu2>
                    </ode>
                </friction>
            </surface>
        </collision>

        <visual name="right_front_wheel_visual">
            <origin xyz="0 0 0" rpy="0 0 1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/wheel.dae" scale="1 1 1"/>
            </geometry>
        </visual>
    </link>

    <joint name="right_front_wheel_joint" type="revolute">
        <parent link="chassis"/>
        <child link="right_front_wheel"/>
        <origin xyz="1.3 -1.9 0.35" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="-9999999999999999" upper="9999999999999999" effort="2000.0" velocity="10.0"/>
    </joint>

    <transmission name="t_right_front_wheel">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="right_front_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="m_right_front_wheel">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>

    <!--Left Back Wheel-->
    <link name="left_back_wheel">
        <inertial>
            <mass value="0.5"/>
            <origin xyz="0 0 0" rpy="0 0 -1.570796"/>
            <inertia ixx="0.00357413" ixy="0" ixz="0" iyy="0.00508627" iyz="0" izz="0.00838547"/>
        </inertial>

        <collision name="left_back_wheel_collision">
            <origin xyz="0 0 0" rpy="0 0 -1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/wheel.dae" scale="1 1 1"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>0.01</mu>
                        <mu2>0.01</mu2>
                    </ode>
                </friction>
            </surface>
        </collision>

        <visual name="left_back_wheel_visual">
            <origin xyz="0 0 0" rpy="0 0 -1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/wheel.dae" scale="1 1 1"/>
            </geometry>
        </visual>
    </link>

    <joint name="left_back_wheel_joint" type="revolute">
        <parent link="chassis"/>
        <child link="left_back_wheel"/>
        <origin xyz="-1.3 1.9 0.35" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="-9999999999999999" upper="9999999999999999" effort="2000.0" velocity="10.0"/>
    </joint>

    <transmission name="t_left_back_wheel">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="left_back_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="m_left_back_wheel">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>

    <!--Right Back Wheel-->
    <link name="right_back_wheel">
        <inertial>
            <mass value="0.5"/>
            <origin xyz="0 0 0" rpy="0 0 1.570796"/>
            <inertia ixx="0.00357413" ixy="0" ixz="0" iyy="0.00508627" iyz="0" izz="0.00838547"/>
        </inertial>

        <collision name="right_back_wheel_collision">
            <origin xyz="0 0 0" rpy="0 0 1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/wheel.dae" scale="1 1 1"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>0.01</mu>
                        <mu2>0.01</mu2>
                    </ode>
                </friction>
            </surface>
        </collision>

        <visual name="right_back_wheel_visual">
            <origin xyz="0 0 0" rpy="0 0 1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/wheel.dae" scale="1 1 1"/>
            </geometry>
        </visual>
    </link>

    <joint name="right_back_wheel_joint" type="revolute">
        <parent link="chassis"/>
        <child link="right_back_wheel"/>
        <origin xyz="-1.3 -1.9 0.35" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="-9999999999999999" upper="9999999999999999" effort="2000.0" velocity="10.0"/>
    </joint>

    <transmission name="t_right_back_wheel">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="right_back_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="m_right_back_wheel">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>

    <!--Frame-->

    <link name="Frame">
        <inertial>
            <mass value="0.5"/>
            <origin xyz="0 0 0" rpy="0 0 1.570796"/>
            <inertia ixx="0.00357413" ixy="0" ixz="0" iyy="0.00508627" iyz="0" izz="0.00838547"/>
        </inertial>

        <collision name="Frame_collision">
            <origin xyz="0 0 0" rpy="0 0 1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/frame.dae" scale="1 1 1"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>0.01</mu>
                        <mu2>0.01</mu2>
                    </ode>
                </friction>
            </surface>
        </collision>

        <visual name="Frame_visual">
            <origin xyz="0 0 0" rpy="0 0 1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/frame.dae" scale="1 1 1"/>
            </geometry>
        </visual>
    </link>

    <joint name="Frame_joint" type="fixed">
        <parent link="chassis"/>
        <child link="Frame"/>
        <origin xyz="2.4 0 1.5" rpy="0 -1.570796 0"/>
        <axis xyz="0 1 0"/>
    </joint>

    <!--Lidar-->

    <link name="lidar">
        <inertial>
            <mass value="0.05"/>
            <origin xyz="0.9743 0 0" rpy="0 0 1.570796"/>
            <inertia ixx="0.00357413" ixy="0" ixz="0" iyy="0.00508627" iyz="0" izz="0.00838547"/>
        </inertial>

        <collision name="lidar_collision">
            <origin xyz="0.9743 0 0" rpy="0 0 1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/lidar.dae" scale="1 1 1"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>0.01</mu>
                        <mu2>0.01</mu2>
                    </ode>
                </friction>
            </surface>
        </collision>

        <visual name="lidar_visual">
            <origin xyz="0.9743 0 0" rpy="0 0 1.570796"/>
            <geometry>
                <mesh filename="package://example_description/meshes/lidar.dae" scale="1 1 1"/>
            </geometry>
        </visual>
    </link>

    <joint name="lidar_joint" type="revolute">
        <parent link="chassis"/>
        <child link="lidar"/>
        <origin xyz="2.49 0 5.05141" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit lower="-1.570796" upper="1.570796" effort="2000.0" velocity="10.0"/>
    </joint>

    <gazebo reference="lidar">
        <sensor type="gpu_ray" name="lidar_sensor">
            <pose>0.98 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>60</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>64</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.570796</min_angle>
                        <max_angle>1.570796</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.0001</min>
                    <max>120.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise parameters based on published spec for Hokuyo laser
                achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                reading. -->
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
                <topicName>/example/laser/scan</topicName>
                <frameName>lidar</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <transmission name="t_lidar_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="lidar_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="m_lidar_joint">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>

    <!-- <gazebo>
        <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
            <updateRate>100.0</updateRate>
            <robotNamespace>/skid</robotNamespace>
            <leftFrontJoint>left_front_wheel_joint</leftFrontJoint>
            <rightFrontJoint>right_front_wheel_joint</rightFrontJoint>
            <leftRearJoint>left_back_wheel_joint</leftRearJoint>
            <rightRearJoint>right_back_wheel_joint</rightRearJoint>
            <wheelSeparation>3.2</wheelSeparation>
            <wheelDiameter>2.1</wheelDiameter>
            <robotBaseFrame>chassis</robotBaseFrame>
            <torque>20</torque>
            <topicName>cmd_vel</topicName>
            <broadcastTF>true</broadcastTF>
        </plugin>
    </gazebo> -->

    <!-- Camera 1-->

    <link name="camera_1_link">
    </link>

    <joint name="camera_1_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="2.4 0.2 1.5" rpy="0 0 0"/>
        <parent link="chassis"/>
        <child link="camera_1_link"/>
    </joint>

    <gazebo reference="camera_1_link">
        <sensor type="camera" name="camera1">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>rgb8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>30.0</updateRate>
                <cameraName>example/camera1</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <!-- Camera 2-->

    <link name="camera_2_link">
    </link>

    <joint name="camera_2_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="2.4 -0.2 1.5" rpy="0 0 0"/>
        <parent link="chassis"/>
        <child link="camera_2_link"/>
    </joint>

    <gazebo reference="camera_2_link">
        <sensor type="camera" name="camera2">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>5.0</updateRate>
                <cameraName>example/camera2</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>


    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/example</robotNamespace>
        </plugin>
    </gazebo>

    <plugin name="rover_telemetries" filename="librover_telemetries.so">
        <robotNamespace>/slet</robotNamespace>
    </plugin>





</robot>